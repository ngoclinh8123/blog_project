version: "2.1"
services:
  base_db:
    image: "postgres:12.2-alpine"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./api/dbdata:/var/lib/postgresql/data/:delegated
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  base_api:
    container_name: base_api
    build:
      context: ../api
      dockerfile: ../docker/dockerfiles/api
    volumes:
      - ../api:/code:delegated
    tty: true
    ports:
      - "8000:8000"
    # command: poetry run gunicorn core.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - base_db

  base_nginx:
    container_name: base_nginx
    build:
      context: ../api/public
      dockerfile: ../../docker/dockerfiles/nginx
    volumes:
      - ./api/nginx:/etc/nginx/conf.d
      - ../api/public/:/resource/public
      - ${PATH_TO_SSL}:/resource/ssl
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - base_api
  base_web:
    container_name: base_web
    build:
      context: ../web
      dockerfile: ../docker/dockerfiles/web
    volumes:
      - ../web:/code:delegated
      - ../web/node_modules:/code/node_modules
    ports:
      - "5173:80"
    # command: nginx -g "daemon off;"
    # ports:
    #   - "5173:80"
    command: npm run dev
    tty: true
